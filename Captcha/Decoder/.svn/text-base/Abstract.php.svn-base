<?php
/**
 * @package Captcha
 */

/**
 * Base class for CAPTCHA decoders
 *
 * @package Captcha
 * @subpackage Decoder
 */
abstract class Captcha_Decoder_Abstract
    extends Captcha_Abstract
    implements Captcha_Decoder_Interface
{
    const DEFAULT_TIMEOUT = 90;


    /**
     * Decoder service' account credentials
     *
     * @var array
     */
    protected $_userpwd = array();

    /**
     * CAPTCHA decoding service client
     *
     * @var mixed
     */
    protected $_client = null;


    /**
     * Extend to your needs, return parent::init() for chaining.
     * May be called more than once.
     */
    public function init()
    {
        $this->_userpwd['user'] = $this->_userpwd['pass'] = '';
        return parent::init();
    }

    /**
     * Returns CAPTCHA solving service client.
     *
     * @return mixed
     */
    public function get_client()
    {
        return $this->_client;
    }

    /**
     * @see Captcha_Decoder_Interface::decode()
     *
     * Extend to your needs, call parent::decode() to check if the file
     * exists and is readable
     *
     * @throws Captcha_Decoder_Exception When CAPTCHA image file is unreadable
     */
    public function decode($fn, $timeout=0)
    {
        if (!is_file($fn) || !is_readable($fn)) {
            throw new Captcha_Decoder_Exception(
                "{$fn} not found or unreadable",
                Captcha_Decoder_Exception::IO_ERROR
            );
        }
        return $this;
    }

    /**
     * Allows setting credentials properties
     *
     * @param string $key
     * @param mixed  $value
     */
    public function __set($key, $value)
    {
        if (array_key_exists($key, $this->_userpwd)) {
            $this->_userpwd[$key] = $value;
        } else {
            parent::__set($key, $value);
        }
    }

    /**
     * Allows fetching credentials properties
     *
     * @param string $key
     * @return mixed
     */
    public function __get($key)
    {
        return array_key_exists($key, $this->_userpwd)
            ? $this->_userpwd[$key]
            : parent::__get($key);
    }
}

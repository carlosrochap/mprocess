<?php
/**
 * @package Captcha
 */

require_once 'decaptcher.php';

/**
 * @package Captcha
 * @subpackage Decoder
 */
class Captcha_Decoder_Decaptcher extends Captcha_Decoder_Abstract
{
    const DEFAULT_HOST = 'api.deathbycaptcha.com';
    const DEFAULT_PORT = 8223;


    /**
     * @see Captcha_Decoder_Abstract::init()
     */
    public function init()
    {
        if ($this->_client && sCCC_INIT != $this->_client->status) {
            $this->_client->close();
        }
        return parent::init();
    }

    /**
     * @see Captcha_Decoder_Abstract::get_client()
     */
    public function get_client()
    {
        if (!$this->_client) {
            $this->_client = new ccproto();
            if (ccERR_OK != $this->_client->login(
                self::DEFAULT_HOST,
                self::DEFAULT_PORT,
                $this->user,
                $this->pass
            )) {
                throw new Captcha_Decoder_Exception('Invalid Decaptcher credentials');
            }

            $balance = 0;
            $this->_client->balance(&$balance);
            if (0 >= $balance) {
                throw new Captcha_Decoder_Exception('Insufficient Decaptcher funds');
            }
        }

        return parent::get_client();
    }

    /**
     * @see Captcha_Decoder_Interface::decode()
     */
    public function decode($fn, $timeout=0)
    {
        parent::decode($fn, $timeout);
        $pict = file_get_contents($fn);
        $pict_to = ptoDEFAULT;
        $pict_type = ptUNSPECIFIED;
        $major_id = 0;
        $minor_id = 0;
        $text = '';
        return ccERR_OK == $this->get_client()->picture2($pict, &$pict_to, &$pict_type, &$text, &$major_id, &$minor_id)
            ? array(array($major_id, $minor_id), $text)
            : null;
    }

    /**
     * @see Captcha_Decoder_Interface::report()
     */
    public function report($id, $is_correct=false)
    {
        return !$is_correct &&
               ccERR_OK == $this->get_client()->picture_bad2($id[0], $id[1]);
    }
}
